/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package es.SSII2.Main;


import com.itextpdf.text.DocumentException;
import es.SSII2.manager.*;
import es.SSII2.entity.*;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Windows
 */
public class Main extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/**
     * Creates new form VentanaPrincipal
     */
   private String pathExcel;
   private String pathTxt;
   private final String dirNominas;
   private final String dirResources;
   private final String icono;
   private final String dirTxt;

    public String getPathTxt() {
        return pathTxt;
    }

    public void setPathTxt(String pathTxt) {
        this.pathTxt = pathTxt;
    }

    public String getPathExcel() {
        return pathExcel;
    }

    public void setPathExcel(String pathExcel) {
        this.pathExcel = pathExcel;
    }
    
    public Main() {
        this.dirTxt = "src/es/SSII2/nominasTXT/";
        this.icono = "es/SSII2/resources/icon.png";
        this.dirResources = "src/es/SSII2/resources/";
        this.dirNominas = "src/es/SSII2/nominasPDFs/";
        initComponents();//componentes del swing
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titulo = new javax.swing.JLabel();
        txtData = new javax.swing.JTextField();
        botonGenerar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaPDF = new javax.swing.JList<>();
        labelAyuda = new javax.swing.JLabel();
        botonUbicacion = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtPathExcel = new javax.swing.JTextField();
        botonSelecExcel = new javax.swing.JButton();
        botonAbrirExcel = new javax.swing.JButton();
        botonNuevo = new javax.swing.JButton();
        barraDeProgreso = new javax.swing.JProgressBar();
        jScrollPane3 = new javax.swing.JScrollPane();
        logArea = new javax.swing.JTextArea();
        botonAbrirTxt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Generador PDFs nominas");
        setIconImage(getIconImage());
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        titulo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        titulo.setText("Introduce el mes y año  (MM/AAAA)");

        txtData.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        botonGenerar.setText("Generar");
        botonGenerar.setEnabled(false);
        botonGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGenerarActionPerformed(evt);
            }
        });

        listaPDF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        listaPDF.setModel(new javax.swing.AbstractListModel<String>() {
            /**
			 * 
			 */
			private static final long serialVersionUID = 1L;
			String[] strings = {};
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listaPDF.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaPDF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaPDFMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listaPDF);

        labelAyuda.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelAyuda.setText("(doble click para abrir pdf)");

        botonUbicacion.setText("Ubicación PDFs");
        botonUbicacion.setEnabled(false);
        botonUbicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonUbicacionActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("Generador   de   Nominas");

        txtPathExcel.setEditable(false);

        botonSelecExcel.setText("Seleccionar Excel");
        botonSelecExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSelecExcelActionPerformed(evt);
            }
        });

        botonAbrirExcel.setText("Abrir Excel");
        botonAbrirExcel.setEnabled(false);
        botonAbrirExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAbrirExcelActionPerformed(evt);
            }
        });

        botonNuevo.setText("Nuevo");
        botonNuevo.setEnabled(false);
        botonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNuevoActionPerformed(evt);
            }
        });

        barraDeProgreso.setStringPainted(true);

        logArea.setEditable(false);
        logArea.setColumns(20);
        logArea.setRows(5);
        jScrollPane3.setViewportView(logArea);

        botonAbrirTxt.setText("Abrir archivo TXT");
        botonAbrirTxt.setEnabled(false);
        botonAbrirTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAbrirTxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtPathExcel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(botonSelecExcel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(botonAbrirExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(78, 78, 78)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(barraDeProgreso, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(txtData, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                                            .addGap(18, 18, 18)
                                            .addComponent(botonGenerar)
                                            .addGap(18, 18, 18)
                                            .addComponent(botonNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane3))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonAbrirTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelAyuda, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(jLabel1)))
                .addGap(54, 54, 54))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonSelecExcel)
                    .addComponent(botonAbrirExcel)
                    .addComponent(botonAbrirTxt))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPathExcel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonUbicacion))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelAyuda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(titulo)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonGenerar)
                            .addComponent(botonNuevo))
                        .addGap(22, 22, 22)
                        .addComponent(barraDeProgreso, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(715, 552));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
   
    //****************************************************************
    //****************************************************************
    //clase que extiende de SwingWorker para poder llevar el progreso de lo ejecutado en la barra de progreso
    //clase donde se realizan todos los pasos para 
    //CORREGIR LOS DATOS Y GENERAR LAS NOMINAS
    //****************************************************************
    //****************************************************************
    class ProgressPercentage extends SwingWorker<Object, Object>{

        String dateNomina;
        private ProgressPercentage(String dateNomina) {
            this.dateNomina = dateNomina;
        }

        @Override
        protected Object doInBackground() throws Exception {
            try {

                String textArea;
                
                botonAbrirExcel.setEnabled(false);
                botonSelecExcel.setEnabled(false);
                
                botonGenerar.setEnabled(false);

                barraDeProgreso.setValue(0);

                String rutaExcel = getPathExcel();
                
           /*************************************************************/
                barraDeProgreso.setValue(10);
                textArea = "Iniciando...\n";
                logArea.append(textArea);
           /*************************************************************/
                
                

                /**
                 * Practica 1
                 */
                //creamos un nuevo objeto para calcular el dni
                WorkersDni dni = new WorkersDni();

                //pasamos la ruta del excel y el objeto dni
                ExcelManagerDni excel = new ExcelManagerDni(rutaExcel,dni);

                //se lee el dni
                excel.LeerExcelDni();

                //se calcula la letra
                dni.calculatorLetterDni();
                //dni.imprimir();

                //actualziar dnis del excel
                excel.actualizarDnis(dni.getDnis(), dni.getDnisCalculados(), dni.getDnisPos());

           /*************************************************************/
                barraDeProgreso.setValue(30);
                textArea = "Los DNIs fueron actualizados...\n";
                logArea.append(textArea);
           /*************************************************************/

                /**
                 * Practica2
                 */

                WorkersBank account = new WorkersBank();//clase para trabajar con las cuentas

                //clase para leer y escribir los datos en el excel
                ExcelManagerAccount excelAccount = new ExcelManagerAccount(rutaExcel,account);

                excelAccount.readAccountExcel();//se lee las cuentas del excel

                account.calculoDigitoControl();//se calcula el digito de control
                
                //account.print();
                 
                try {
                    //se actualizan las cuentas en el excel
                    excelAccount.actualizarCuentas(account.getAccounts(),
                            account.getNewsAccounts(),
                            account.getArrayIban(),
                            account.getAccountsPossitions());
                } catch (ParseException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            /*************************************************************/
                barraDeProgreso.setValue(40);
                textArea = "Las cuentas bancarias fueron actualizadas...\n";
                logArea.append(textArea);
            /*************************************************************/

                ExcelManagerMail email; //clase para leer y escribir los datos en el excel

                email = new ExcelManagerMail(rutaExcel);
                email.readAccountExcel();//se leen los datos necesarios del excel
                email.actualizarEmails();//se escriben los dnis

            /*************************************************************/
                barraDeProgreso.setValue(50);
                textArea = "Los emails fueron actualizados...\n";
                logArea.append(textArea);
            /*************************************************************/
                
                /**
                 * Practica3
                 */

                //lee los datos del excel y calcula los datos de la nomina
                ExcelManagerNomina emn = new ExcelManagerNomina(rutaExcel,dateNomina);
                emn.inicializarCalculosNomina();

                //crea el txt con los datos de la nomina
                CreateNominasTXT cn = new CreateNominasTXT(dateNomina,emn.getArrayWorkers());
                String nombreTXT = cn.crearTXT();
                setPathTxt(cn.getRutaTxt());//¡ruta relativca!

           /*************************************************************/
                barraDeProgreso.setValue(70);
                textArea = "El txt "+nombreTXT+".txt con los datos fue creado...\n";
                logArea.append(textArea);
           /*************************************************************/

                /**
                 * Practica 4
                 */

                String rutaTXT = dirTxt+nombreTXT+".txt";
                String rutaPDF = dirNominas;
                PDFCreator pdf = new PDFCreator(rutaTXT,rutaPDF,nombreTXT);
                
                try {
                    pdf.leerTxts();//lee el txt y crea las nominas en PDF
                } catch (FileNotFoundException | DocumentException | ParseException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }

                //pone en el jList las nominas que estan dentro de la siguiente ruta
                String path = new File(dirNominas+nombreTXT).getAbsolutePath();
                File dir = new File(path);
                String[] files= dir.list();

                listaPDF.setListData(files);
                listaPDF.setName(nombreTXT);

           /*************************************************************/
                barraDeProgreso.setValue(90);
                textArea = "Los PDFs de "+nombreTXT+" con las nominas fueron creados...\n";
                logArea.append(textArea);
           /*************************************************************/

                botonAbrirTxt.setEnabled(true);
                
                botonUbicacion.setEnabled(true);

                botonGenerar.setEnabled(false);

                botonNuevo.setEnabled(true);
                
                botonAbrirExcel.setEnabled(true);
                botonSelecExcel.setEnabled(true);


            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
               }


          return null;
        }
        
        @Override
        public void done(){
           /*************************************************************/
                barraDeProgreso.setValue(100);
                logArea.append("Todos los procesos terminados...");
           /*************************************************************/
            JOptionPane.showMessageDialog(null, "PDFs creados con éxito", "Exito", JOptionPane.PLAIN_MESSAGE);
            botonAbrirExcel.setEnabled(true);
            botonSelecExcel.setEnabled(true);
        }
    
    }
    
    //boton para generar los PDFs
    private void botonGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGenerarActionPerformed
        
        
        //comprobar si el excel esta abierto
        boolean abierto;
        try {
            RandomAccessFile test = new RandomAccessFile(pathExcel, "rw");
            test.close();
            abierto = false;

        } catch (Exception e) {
             System.out.println(e.toString());
             abierto = true;
        }
        
        //si el excel no esta abierto
        if(!abierto){
            
            String dateNomina = txtData.getText();//coje la data introducida en el text field
            dateNomina = dateNomina.trim();
            int mes, anio;
            String s[];


            if(dateNomina.contains("/")&&dateNomina.length()>=3){

                s = dateNomina.split("/");
                mes = Integer.parseInt(s[0]);
                anio = Integer.parseInt(s[1]);

                if(mes>12||anio<0||s[1].length()<4){
                    JOptionPane.showMessageDialog(null, "Introduzca una data correcta! (MM/AAAA)", "Alert", JOptionPane.ERROR_MESSAGE);
                    txtData.requestFocus();
                }else{
                    botonAbrirExcel.setEnabled(false);
                    botonSelecExcel.setEnabled(false);
                    //miestras se van calculando los datos la barra crece
                    ProgressPercentage progreso = new ProgressPercentage(dateNomina);
                    progreso.execute();
                }

            }
            else{

                JOptionPane.showMessageDialog(null, "Introduzca una data correcta! (MM/AAAA)", "Alert", JOptionPane.ERROR_MESSAGE);
                txtData.requestFocus();
            }
            
        }else{

               JOptionPane.showMessageDialog(null, "¡El Excel esta abierto, cierralo!", "Alert", JOptionPane.ERROR_MESSAGE);

        }
        
    }//GEN-LAST:event_botonGenerarActionPerformed

    //abrir ubicacion de los pdfs
    private void botonUbicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonUbicacionActionPerformed
        
            String path = new File(dirNominas+listaPDF.getName()).getAbsolutePath();
        
            File myFile = new File(path);
            try {
                Desktop.getDesktop().open(myFile);
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }//GEN-LAST:event_botonUbicacionActionPerformed

    //seleccionar excel
    private void botonSelecExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSelecExcelActionPerformed
        
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File(dirResources));
        chooser.setDialogTitle("Selecciona un excel");
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos excel (.xlsx)", "xlsx");
        chooser.setFileFilter(filter);
        chooser.setAcceptAllFileFilterUsed(false);

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
          //System.out.println("getCurrentDirectory(): " + chooser.getCurrentDirectory());
          //System.out.println("getSelectedFile() : " + chooser.getSelectedFile());
            setPathExcel(chooser.getSelectedFile().toString());
            txtPathExcel.setText(getPathExcel());
            botonAbrirExcel.setEnabled(true);
            botonGenerar.setEnabled(true);
            
        } else {
          //System.out.println("Nada seleccionado");
           JOptionPane.showMessageDialog(null, "No has seleccionado ningun EXCEL", "Alert", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_botonSelecExcelActionPerformed

    //abrir excel seleccionado
    private void botonAbrirExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAbrirExcelActionPerformed
         
         File myFile = new File(getPathExcel());
            try {
                Desktop.getDesktop().open(myFile);
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }//GEN-LAST:event_botonAbrirExcelActionPerformed

    private void botonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNuevoActionPerformed
            
        txtData.setText("");
        logArea.setText("");
        
        botonGenerar.setEnabled(true);
        botonUbicacion.setEnabled(false);
        botonAbrirTxt.setEnabled(false);
        botonNuevo.setEnabled(false);
        
        listaPDF.setModel(new DefaultListModel());
        DefaultListModel model = (DefaultListModel)listaPDF.getModel();
        model.removeAllElements();
        
        barraDeProgreso.setValue(0);
        
        txtData.requestFocus();
        
    }//GEN-LAST:event_botonNuevoActionPerformed

    //boton para abrir el archivo txt con los datos
    private void botonAbrirTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAbrirTxtActionPerformed
        
            String path = new File(getPathTxt()).getAbsolutePath();
            File myFile = new File(path);
            
            try {
                Desktop.getDesktop().open(myFile);
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
            
    }//GEN-LAST:event_botonAbrirTxtActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
       
        int seleccionado = JOptionPane.showOptionDialog(null,
                "¿Seguro que desea salir del programa?",
                "Alerta", JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, 
                new String[] {"Aceptar", "Cancelar"}, "Cancelar");

        if (seleccionado == JOptionPane.OK_OPTION) {
           System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    
    //abrir pdf doble click
    private void listaPDFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaPDFMouseClicked
       
         if (evt.getClickCount() == 2) {
             
            JList list = (JList)evt.getSource();
            int index = list.locationToIndex(evt.getPoint());
            
            String path = new File(dirNominas+listaPDF.getName()).getAbsolutePath();
            File dir = new File(path);
            String[] files= dir.list();
            File myFile = new File(path+"/"+files[index]);
            
             try {
                 Desktop.getDesktop().open(myFile);
             } catch (IOException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
        
    }//GEN-LAST:event_listaPDFMouseClicked

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource(icono));


        return retValue;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar barraDeProgreso;
    private javax.swing.JButton botonAbrirExcel;
    private javax.swing.JButton botonAbrirTxt;
    private javax.swing.JButton botonGenerar;
    private javax.swing.JButton botonNuevo;
    private javax.swing.JButton botonSelecExcel;
    private javax.swing.JButton botonUbicacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelAyuda;
    private javax.swing.JList<String> listaPDF;
    private javax.swing.JTextArea logArea;
    private javax.swing.JLabel titulo;
    private javax.swing.JTextField txtData;
    private javax.swing.JTextField txtPathExcel;
    // End of variables declaration//GEN-END:variables
}
